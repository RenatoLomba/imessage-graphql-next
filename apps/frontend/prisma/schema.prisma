generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                      String                    @id @default(cuid())
  name                    String?
  email                   String?                   @unique
  username                String?                   @unique
  emailVerified           DateTime?
  image                   String?
  accounts                Account[]
  ConversationParticipant ConversationParticipant[]
  sessions                Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Conversation {
  id                      String                    @id
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime
  latestMessageId         String?                   @unique
  Message                 Message?                  @relation(fields: [latestMessageId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ConversationParticipant ConversationParticipant[]
}

model ConversationParticipant {
  id                   String       @id
  createdAt            DateTime     @default(now())
  updatedAt            DateTime
  userId               String
  conversationId       String
  hasSeenLatestMessage Boolean      @default(false)
  Conversation         Conversation @relation(fields: [conversationId], references: [id])
  User                 User         @relation(fields: [userId], references: [id])
  Message              Message[]
}

model Message {
  id                      String                  @id
  createdAt               DateTime                @default(now())
  updatedAt               DateTime
  participantId           String
  text                    String
  Conversation            Conversation?
  ConversationParticipant ConversationParticipant @relation(fields: [participantId], references: [id])
}
